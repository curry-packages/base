# precompile all modules of the library
# to avoid recompilation when they are used:

CYMAKEPARAMS = --extended -X TypeClassExtensions --no-verb --no-warn --no-overlap-warn -i. -imeta

PAKCS=$(ROOT)/bin/pakcs

# directory containing the repository library files:
LIBTRUNKDIR=$(ROOT)/lib-trunk
# directory for HTML documentation files:
LIBDOCDIR=CDOC
# directory for LaTeX documentation files:
TEXDOCDIR := $(DOCDIR)/src/lib
# the currydoc program:
CURRYDOC=$(ROOT)/bin/currydoc

# Curry library files
LIB_CURRY = $(filter-out $(EXCLUDES), $(wildcard *.curry meta/*.curry))
# lib names without meta/ prefix
LIB_NAMES = `echo $(LIB_CURRY) | sed 's|meta/||g'`
# generated files:
LIB_FCY   = `echo $(LIB_CURRY:%.curry=.curry/%.fcy) | sed 's|\.curry/meta/|meta/.curry/|g'`
LIB_ACY   = `echo $(LIB_CURRY:%.curry=.curry/%.acy) | sed 's|\.curry/meta/|meta/.curry/|g'`
LIB_PL    = `echo $(LIB_CURRY:%.curry=.curry/pakcs/%.pl) | sed 's|\.curry/pakcs/meta/|meta/.curry/pakcs/|g'`
LIB_HTML  = $(LIB_CURRY:.curry=.html)
LIB_TEX   = $(LIB_CURRY:.curry=.tex)

EXCLUDES  = SearchTree.curry ValueSequence.curry UnsafeSearchTree.curry

.PHONY: all
all: fcy acy

.PHONY: allsources
allsources:
	@echo $(LIB_CURRY)

##########################################################################
# generate the FlatCurry files of all libraries:
.PHONY: fcy
fcy:
	$(MAKE) $(LIB_FCY)

# generate the AbstractCurry files of all libraries:
.PHONY: acy
acy:
	$(MAKE) $(LIB_ACY)

# generate the compile Prolog target files of all libraries:
.PHONY: pl
pl:
	@$(MAKE) $(LIB_PL)

# generate all FlatCurry files in subdirectory .curry:
.curry/%.fcy: %.curry
	"$(CYMAKE)" --flat $(CYMAKEPARAMS) $*

# generate all FlatCurry files in subdirectory meta/.curry:
meta/.curry/%.fcy: meta/%.curry
	"$(CYMAKE)" --flat $(CYMAKEPARAMS) $*

# generate all AbstractCurry files in subdirectory .curry:
.curry/%.acy: %.curry
	"$(CYMAKE)" --acy $(CYMAKEPARAMS) $*

meta/.curry/%.acy: meta/%.curry
	"$(CYMAKE)" --acy $(CYMAKEPARAMS) $*

# generate all Prolog translations:
.curry/pakcs/%.pl: .curry/%.fcy
	rm -f $@ && "$(PAKCS)" --quiet -c $*

meta/.curry/pakcs/%.pl: meta/.curry/%.fcy
	rm -f $@ && "$(PAKCS)" --quiet -c $*

##############################################################################
# create HTML documentation files for system libraries
##############################################################################

.PHONY: doc
doc: $(LIB_CURRY)
	@mkdir -p "$(LIBDOCDIR)"
	@cd "$(LIBDOCDIR)" && rm -f meta DOINDEX && ln -s . meta
	@cd "$(LIBDOCDIR)" && $(MAKE) -f ../Makefile $(LIB_HTML)
	@if [ -f "$(LIBDOCDIR)/DOINDEX" ] ; then $(MAKE) htmlindex ; fi
	@cd "$(LIBDOCDIR)" && rm -f meta DOINDEX

.PHONY: htmlindex
htmlindex:
	@echo "Generating index pages for Curry libraries:"
	@echo $(LIB_NAMES)
	@"$(CURRYDOC)" --onlyindexhtml "$(LIBDOCDIR)" $(LIB_NAMES)

# generate individual documentations for libraries:
%.html: ../%.curry
	@touch DOINDEX
	cd .. && "$(CURRYDOC)" --noindexhtml "$(LIBDOCDIR)" $*

meta/%.html: ../meta/%.curry
	@touch DOINDEX
	cd .. && "$(CURRYDOC)" --noindexhtml "$(LIBDOCDIR)" $*

##############################################################################
# create LaTeX documentation files for system libraries
##############################################################################

.PHONY: texdoc
texdoc: $(LIB_CURRY)
	@mkdir -p "$(TEXDOCDIR)"
	@if [ ! -f "$(TEXDOCDIR)/LAST" ] ; then touch "$(TEXDOCDIR)/LAST" ; fi
	@cd "$(TEXDOCDIR)" && rm -f meta && ln -s . meta
	@cd "$(TEXDOCDIR)" && $(MAKE) -f $(ROOT)/lib/Makefile $(LIB_TEX)
	@cd "$(TEXDOCDIR)" && rm -f meta

# generate individual LaTeX documentations for libraries:
%.tex: $(LIBDIR)/%.curry
	cd $(LIBDIR) && "$(CURRYDOC)" --tex "$(TEXDOCDIR)" $*
	touch LAST

meta/%.tex: $(LIBDIR)/meta/%.curry
	cd $(LIBDIR) && "$(CURRYDOC)" --tex "$(TEXDOCDIR)" $*
	touch LAST


# clean all generated files
.PHONY: clean
clean:
	rm -f "$(LIBDOCDIR)"/*
	rm -f "$(TEXDOCDIR)"/*
	../bin/cleancurry
	cd meta && ../../bin/cleancurry

# clean all generated Prolog files
.PHONY: cleanpl
cleanpl:
	rm -f .curry/pakcs/*.pl .curry/pakcs/*.po meta/.curry/pakcs/*.pl meta/.curry/pakcs/*.po \
	      *.pl *.po meta/*.pl meta/*.po
